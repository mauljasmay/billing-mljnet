<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - <%= settings.company_header || 'GEMBOK' %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #2255a6;
            --secondary-color: #f8f9fa;
            --success-color: #28a745;
            --danger-color: #dc3545;
            --warning-color: #ffc107;
            --info-color: #17a2b8;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            margin: 0;
            padding: 0;
        }

        .main-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .voucher-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            border: none;
            transition: all 0.3s ease;
            overflow: hidden;
            margin-bottom: 20px;
            position: relative;
        }

        .voucher-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 30px 60px rgba(0,0,0,0.2);
        }

        .voucher-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, #1e4d8c 100%);
            color: white;
            padding: 30px 20px;
            text-align: center;
        }

        .voucher-price {
            font-size: 2.5rem;
            font-weight: 700;
            color: white;
            margin: 10px 0;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
        }

        .voucher-duration {
            font-size: 1.2rem;
            opacity: 0.9;
            margin-bottom: 5px;
        }

        .voucher-description {
            font-size: 0.9rem;
            opacity: 0.8;
        }

        .voucher-body {
            padding: 25px;
        }

        .package-features {
            list-style: none;
            padding: 0;
            margin: 0 0 20px 0;
        }

        .package-features li {
            padding: 8px 0;
            border-bottom: 1px solid #f0f0f0;
            display: flex;
            align-items: center;
        }

        .package-features li:last-child {
            border-bottom: none;
        }

        .package-features li i {
            color: var(--success-color);
            margin-right: 10px;
            width: 16px;
        }

        .btn-purchase {
            width: 100%;
            padding: 12px;
            border-radius: 10px;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.3s ease;
            border: none;
            background: linear-gradient(135deg, var(--primary-color) 0%, #1e4d8c 100%);
        }

        .btn-purchase:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(34, 85, 166, 0.3);
        }

        .popular-badge {
            position: absolute;
            top: -10px;
            right: 20px;
            background: var(--warning-color);
            color: black;
            padding: 5px 15px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        }

        .modal-content {
            border-radius: 20px;
            border: none;
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
        }

        .modal-header {
            background: linear-gradient(135deg, var(--primary-color) 0%, #1e4d8c 100%);
            color: white;
            border-radius: 20px 20px 0 0;
            border: none;
            padding: 25px;
        }

        .modal-body {
            padding: 30px;
        }

        .form-control {
            border-radius: 10px;
            border: 2px solid #e9ecef;
            padding: 12px 15px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        .form-control:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(34, 85, 166, 0.25);
        }

        .form-label {
            font-weight: 600;
            color: #495057;
            margin-bottom: 8px;
        }

        .btn-modal {
            padding: 12px 30px;
            border-radius: 10px;
            font-weight: 600;
            font-size: 1rem;
        }

        .alert {
            border-radius: 10px;
            border: none;
        }

        .alert-success {
            background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
            color: #155724;
        }

        .alert-danger {
            background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);
            color: #721c24;
        }

        /* Enhanced Mobile Responsive */
        @media (max-width: 768px) {
            .main-container {
                padding: 15px;
            }

            .voucher-header {
                padding: 20px 15px;
            }

            .voucher-price {
                font-size: 2rem;
            }

            .voucher-body {
                padding: 20px;
            }

            .modal-dialog {
                margin: 15px;
                max-width: 95vw;
            }

            .modal-body {
                padding: 20px;
            }

            .display-4 {
                font-size: 2.5rem;
            }

            .lead {
                font-size: 1.1rem;
            }
        }

        @media (max-width: 576px) {
            .voucher-card {
                margin-bottom: 15px;
            }

            .voucher-price {
                font-size: 1.8rem;
            }

            .btn-purchase {
                padding: 10px;
                font-size: 0.9rem;
            }

            .modal-dialog {
                margin: 10px;
                max-width: 98vw;
            }

            .modal-header {
                padding: 20px 15px;
            }

            .modal-body {
                padding: 15px;
            }

            .display-4 {
                font-size: 2rem;
            }

            .lead {
                font-size: 1rem;
            }

            .form-control {
                padding: 10px 12px;
                font-size: 0.9rem;
            }

            .btn-modal {
                padding: 10px 20px;
                font-size: 0.9rem;
            }
        }

        /* Large mobile breakpoint */
        @media (max-width: 480px) {
            .main-container {
                padding: 10px;
            }

            .voucher-card {
                margin-bottom: 10px;
            }

            .voucher-header {
                padding: 15px 10px;
            }

            .voucher-price {
                font-size: 1.5rem;
            }

            .voucher-duration {
                font-size: 1rem;
            }

            .voucher-description {
                font-size: 0.8rem;
            }

            .voucher-body {
                padding: 15px;
            }

            .package-features li {
                font-size: 0.85rem;
                padding: 6px 0;
            }

            .btn-purchase {
                padding: 8px;
                font-size: 0.85rem;
            }

            .modal-dialog {
                margin: 5px;
                max-width: 100vw;
                height: 100vh;
                max-height: 100vh;
            }

            .modal-content {
                height: 100%;
                border-radius: 0;
            }

            .modal-header {
                padding: 15px 10px;
            }

            .modal-body {
                padding: 10px;
                overflow-y: auto;
                flex: 1;
            }

            .display-4 {
                font-size: 1.8rem;
            }

            .lead {
                font-size: 0.9rem;
            }

            .form-control {
                padding: 8px 10px;
                font-size: 0.85rem;
            }

            .btn-modal {
                padding: 8px 15px;
                font-size: 0.85rem;
            }

            .alert {
                font-size: 0.85rem;
                padding: 8px 12px;
            }
        }

        /* Improved grid for small screens */
        @media (max-width: 480px) {
            .row.g-4 {
                --bs-gutter-x: 0.5rem;
                --bs-gutter-y: 0.5rem;
            }

            .col-12 {
                padding-left: 0.25rem;
                padding-right: 0.25rem;
            }
        }

        /* Accessibility improvements */
        .btn:focus,
        .form-control:focus {
            outline: 2px solid var(--primary-color);
            outline-offset: 2px;
        }

        /* High contrast mode support */
        @media (prefers-contrast: high) {
            .voucher-card {
                border: 2px solid #000;
            }

            .btn-purchase {
                border: 2px solid #000;
            }
        }

        /* Reduced motion support */
        @media (prefers-reduced-motion: reduce) {
            .voucher-card,
            .btn-purchase,
            .btn-purchase:hover {
                animation: none;
                transition: none;
                transform: none;
            }
        }

        /* Loading spinner */
        .spinner-border-sm {
            width: 1rem;
            height: 1rem;
        }

        /* Loading states */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .loading-content {
            background: white;
            padding: 30px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 10px 30px rgba(0,0,0,0.3);
        }

        .loading-content .spinner-border {
            width: 3rem;
            height: 3rem;
            margin-bottom: 15px;
        }

        .voucher-card-loading {
            opacity: 0.6;
            pointer-events: none;
        }

        .payment-loading {
            opacity: 0.7;
            pointer-events: none;
        }

        .payment-loading::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20px;
            height: 20px;
            margin: -10px 0 0 -10px;
            border: 2px solid var(--primary-color);
            border-top: 2px solid transparent;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Custom animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .voucher-card {
            animation: fadeInUp 0.6s ease-out;
        }

        .voucher-card:nth-child(1) { animation-delay: 0.1s; }
        .voucher-card:nth-child(2) { animation-delay: 0.2s; }
        .voucher-card:nth-child(3) { animation-delay: 0.3s; }
        .voucher-card:nth-child(4) { animation-delay: 0.4s; }
        .voucher-card:nth-child(5) { animation-delay: 0.5s; }
        .voucher-card:nth-child(6) { animation-delay: 0.6s; }
    </style>
</head>
<body>
    <div class="main-container">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-12 col-lg-10">
                    <!-- Header -->
                    <div class="text-center mb-5">
                        <h1 class="display-4 fw-bold text-white mb-3">
                            <i class="bi bi-wifi me-3"></i>
                            <%= settings.company_header || 'GEMBOK' %> Hotspot
                        </h1>
                        <p class="lead text-white-50 mb-4">
                            Pilih paket voucher WiFi yang sesuai dengan kebutuhan Anda
                        </p>
                    </div>

                    <!-- Alert Messages -->
                    <% if (error) { %>
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            <strong>Perhatian:</strong> <%= error %>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                        <% if (error.includes('Voucher tidak ditemukan')) { %>
                        <div class="alert alert-info mt-3" role="alert">
                            <h6><i class="bi bi-info-circle-fill me-2"></i>Tips untuk Mengatasi:</h6>
                            <ul class="mb-2">
                                <li>Pastikan link pembayaran yang Anda gunakan benar</li>
                                <li>Periksa apakah belum melewati batas waktu pembayaran (biasanya 24 jam)</li>
                                <li>Jika masalah berlanjut, lakukan pembelian voucher baru</li>
                                <li>Hubungi admin jika mengalami kesulitan teknis</li>
                            </ul>
                            <button type="button" class="btn btn-primary btn-sm" onclick="window.location.reload()">
                                <i class="bi bi-arrow-clockwise me-1"></i>Coba Lagi
                            </button>
                        </div>
                        <% } %>
                    <% } %>

                    <% if (success) { %>
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="bi bi-check-circle-fill me-2"></i>
                            <%= success %>
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        </div>
                    <% } %>

                    <!-- Voucher Cards Grid -->
                    <div class="row g-4">
                        <% voucherPackages.forEach((pkg, index) => { %>
                            <div class="col-12 col-md-6 col-lg-4">
                                <div class="voucher-card">
                                    <% if (pkg.id === '24jam') { %>
                                        <div class="popular-badge">Terlaris</div>
                                    <% } %>
                                    <div class="voucher-header">
                                        <div class="voucher-duration"><%= pkg.name %></div>
                                        <div class="voucher-price">Rp <%= pkg.price.toLocaleString('id-ID') %></div>
                                        <div class="voucher-description"><%= pkg.description %></div>
                                    </div>
                                    <div class="voucher-body">
                                        <ul class="package-features">
                                            <li><i class="bi bi-wifi"></i> Kecepatan penuh sesuai paket</li>
                                            <li><i class="bi bi-clock"></i> Aktif 
                                                <% if (pkg.duration_type === 'hours') { %>
                                                    <%= pkg.duration_value %> Jam
                                                <% } else if (pkg.duration_type === 'days') { %>
                                                    <%= pkg.duration_value %> Hari
                                                <% } else { %>
                                                    <%= pkg.duration_value %> Jam
                                                <% } %>
                                            </li>
                                            <li><i class="bi bi-shield-check"></i> Keamanan terjamin</li>
                                            <li><i class="bi bi-headset"></i> Support 24/7</li>
                                        </ul>
                                        <button class="btn btn-primary btn-purchase" data-package-id="<%= pkg.id %>" data-package-name="<%= pkg.name %>" data-package-price="<%= pkg.price %>">
                                            <i class="bi bi-cart-plus me-2"></i>Beli Sekarang
                                        </button>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>

                    <!-- Footer Info -->
                    <div class="text-center mt-5">
                        <p class="text-white-50 mb-2">
                            <i class="bi bi-info-circle me-2"></i>
                            Butuh bantuan? Hubungi kami di <%= settings.contact_phone || '081947215703' %>
                        </p>
                        <p class="text-white-50 small">
                            © 2025 <%= settings.company_header || 'GEMBOK' %> - Semua hak dilindungi
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal Pembelian -->
    <div class="modal fade" id="purchaseModal" tabindex="-1" aria-labelledby="purchaseModalLabel" aria-hidden="true" role="dialog">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="purchaseModalLabel">
                        <i class="bi bi-cart-plus me-2" aria-hidden="true"></i>Beli Voucher WiFi
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Tutup modal pembelian voucher" type="button"></button>
                </div>
                <div class="modal-body">
                    <div id="packageInfo" class="mb-4 p-3 bg-light rounded" role="region" aria-label="Informasi paket yang dipilih">
                        <!-- Package info akan diisi oleh JavaScript -->
                    </div>

                    <form id="purchaseForm" role="form" aria-labelledby="purchaseModalLabel">
                        <div class="mb-3">
                            <label for="customerName" class="form-label">
                                <i class="bi bi-person me-2" aria-hidden="true"></i>Nama Lengkap
                            </label>
                            <input type="text" class="form-control" id="customerName" name="customerName" required
                                   placeholder="Masukkan nama lengkap Anda" minlength="2" maxlength="50"
                                   aria-describedby="customerNameHelp customerNameFeedback" aria-invalid="false"
                                   aria-required="true" autocomplete="name">
                            <div class="invalid-feedback" id="customerNameFeedback" role="alert" aria-live="polite">
                                Nama lengkap harus diisi (minimal 2 karakter).
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="customerPhone" class="form-label">
                                <i class="bi bi-phone me-2" aria-hidden="true"></i>Nomor WhatsApp
                            </label>
                            <input type="tel" class="form-control" id="customerPhone" name="customerPhone" required
                                   placeholder="628xxxxxxxxxx" pattern="^[0-9]{10,15}$"
                                   aria-describedby="customerPhoneHelp customerPhoneFeedback" aria-invalid="false"
                                   aria-required="true" autocomplete="tel">
                            <div class="form-text" id="customerPhoneHelp">Voucher akan dikirim ke nomor WhatsApp ini</div>
                            <div class="invalid-feedback" id="customerPhoneFeedback" role="alert" aria-live="polite">
                                Masukkan nomor WhatsApp yang valid (10-15 digit).
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="quantity" class="form-label">
                                <i class="bi bi-dash-circle me-2" aria-hidden="true"></i>Jumlah Voucher
                            </label>
                            <select class="form-control" id="quantity" name="quantity" aria-describedby="quantityHelp" aria-label="Pilih jumlah voucher yang ingin dibeli">
                                <option value="1">1 Voucher</option>
                                <option value="2">2 Voucher</option>
                                <option value="3">3 Voucher</option>
                                <option value="5">5 Voucher</option>
                                <option value="10">10 Voucher</option>
                            </select>
                        </div>

                        <!-- Payment Method Selection -->
                        <div class="mb-4">
                            <label class="form-label" id="payment-methods-label" for="payment-methods-container">
                                <i class="bi bi-credit-card me-2" aria-hidden="true"></i>Metode Pembayaran
                            </label>
                            <div id="payment-methods-container" role="radiogroup" aria-labelledby="payment-methods-label" aria-live="polite">
                                <div class="text-center py-3">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Memuat metode pembayaran...</span>
                                    </div>
                                    <p class="mt-2 mb-0">Memuat metode pembayaran...</p>
                                </div>
                            </div>
                        </div>

                        <input type="hidden" id="packageId" name="packageId">
                        <input type="hidden" id="selectedGateway" name="selectedGateway">
                        <input type="hidden" id="selectedMethod" name="selectedMethod">

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary btn-modal" id="submitBtn" disabled
                                    aria-describedby="submitBtnStatus">
                                <span class="spinner-border spinner-border-sm me-2 d-none" role="status" aria-hidden="true"></span>
                                <i class="bi bi-credit-card me-2" aria-hidden="true"></i>Bayar Sekarang
                            </button>
                            <div id="submitBtnStatus" class="visually-hidden" aria-live="polite" role="status"></div>
                            <button type="button" class="btn btn-outline-secondary btn-modal" data-bs-dismiss="modal" aria-label="Batal dan tutup modal pembelian">
                                <i class="bi bi-x-circle me-2" aria-hidden="true"></i>Batal
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        let selectedPackage = null;

        // Handle button clicks using event delegation
        document.addEventListener('click', function(e) {
            if (e.target.closest('.btn-purchase')) {
                const button = e.target.closest('.btn-purchase');
                const packageId = button.dataset.packageId;
                const packageName = button.dataset.packageName;
                const packagePrice = parseInt(button.dataset.packagePrice);
                
                selectPackage(packageId, packageName, packagePrice);
            }
        });

        function selectPackage(packageId, packageName, price) {
            selectedPackage = { id: packageId, name: packageName, price: price };

            // Update modal info
            document.getElementById('packageInfo').innerHTML = `
                <div class="text-center">
                    <h5 class="mb-2">${packageName}</h5>
                    <h3 class="text-primary mb-0">Rp ${price.toLocaleString('id-ID')}</h3>
                </div>
            `;

            document.getElementById('packageId').value = packageId;

            // Load payment methods
            loadPaymentMethods();

            // Show modal
            const modal = new bootstrap.Modal(document.getElementById('purchaseModal'));
            modal.show();

            // Focus management: auto-focus on first input when modal opens
            document.getElementById('purchaseModal').addEventListener('shown.bs.modal', function() {
                document.getElementById('customerName').focus();
            }, { once: true });
        }

        // Load payment methods (same as invoice detail)
        async function loadPaymentMethods() {
            try {
                const response = await fetch('/voucher/api/payment-methods');
                const result = await response.json();

                if (result.success) {
                    displayPaymentMethods(result.methods);
                } else {
                    showPaymentMethodsError(result.message || 'Gagal memuat metode pembayaran');
                }
            } catch (error) {
                console.error('Error loading payment methods:', error);
                showPaymentMethodsError('Terjadi kesalahan saat memuat metode pembayaran');
            }
        }

        function displayPaymentMethods(methods) {
            const container = document.getElementById('payment-methods-container');
            let html = '<div class="row g-2">';

            methods.forEach(method => {
                // Check if amount meets minimum requirement
                const packageAmount = selectedPackage ? selectedPackage.price : 0;
                const isDisabled = method.minimum_amount && packageAmount < method.minimum_amount;
                const disabledClass = isDisabled ? 'disabled' : '';
                const disabledTitle = isDisabled ? `Minimal pembayaran: Rp ${method.minimum_amount?.toLocaleString('id-ID')}` : '';

                html += `
                    <div class="col-6">
                        <button class="btn btn-outline-${method.color} w-100 payment-method ${disabledClass}"
                                data-gateway="${method.gateway}"
                                data-method="${method.method}"
                                ${isDisabled ? 'disabled' : ''}
                                title="${disabledTitle}"
                                role="radio"
                                aria-checked="${selectedPackage && !isDisabled ? 'false' : 'false'}"
                                aria-label="${method.name} - Fee: ${method.fee_customer || 'Gratis'}${isDisabled ? ` - Minimum pembayaran: Rp ${method.minimum_amount?.toLocaleString('id-ID')}` : ''}">
                            <i class="${method.icon}" aria-hidden="true"></i><br>
                            <small>${method.name}</small>
                            <br><small class="text-muted">Fee: ${method.fee_customer || 'Gratis'}</small>
                            ${isDisabled ? `<br><small class="text-danger">Min: Rp ${method.minimum_amount?.toLocaleString('id-ID')}</small>` : ''}
                        </button>
                    </div>
                `;
            });

            html += '</div>';
            container.innerHTML = html;

            // Bind event listeners to new buttons
            bindPaymentMethodEvents();
        }

        function showPaymentMethodsError(message) {
            const container = document.getElementById('payment-methods-container');
            container.innerHTML = `
                <div class="alert alert-danger">
                    <i class="bi bi-exclamation-circle"></i>
                    ${message}
                </div>
                <button class="btn btn-outline-primary w-100" onclick="loadPaymentMethods()">
                    <i class="bi bi-arrow-clockwise"></i> Coba Lagi
                </button>
            `;
        }

        // Handle payment method selection
        function bindPaymentMethodEvents() {
            document.querySelectorAll('.payment-method').forEach(button => {
                button.addEventListener('click', function() {
                    if (this.disabled) return;
                    selectPaymentMethod(this);
                });

                // Keyboard navigation support
                button.addEventListener('keydown', function(e) {
                    if (e.key === 'Enter' || e.key === ' ') {
                        e.preventDefault();
                        if (!this.disabled) {
                            selectPaymentMethod(this);
                        }
                    }
                });
            });
        }

        function selectPaymentMethod(button) {
            // Remove active class and aria-checked from all buttons
            document.querySelectorAll('.payment-method').forEach(btn => {
                btn.classList.remove('active');
                btn.setAttribute('aria-checked', 'false');
            });

            // Add active class and aria-checked to selected button
            button.classList.add('active');
            button.setAttribute('aria-checked', 'true');

            // Store selected payment method
            const gateway = button.dataset.gateway;
            const method = button.dataset.method;

            document.getElementById('selectedGateway').value = gateway;
            document.getElementById('selectedMethod').value = method;

            // Enable submit button
            document.getElementById('submitBtn').disabled = false;

            // Announce selection to screen readers
            const statusDiv = document.getElementById('submitBtnStatus');
            statusDiv.textContent = `Metode pembayaran ${button.querySelector('small').textContent} dipilih`;
        }



        // Format phone number input
        document.getElementById('customerPhone').addEventListener('input', function(e) {
            let value = e.target.value.replace(/\D/g, '');
            if (value.startsWith('0')) {
                value = '62' + value.slice(1);
            }
            if (!value.startsWith('62')) {
                value = '62' + value;
            }
            e.target.value = value;
        });

        // Enhanced form validation
        function validateForm() {
            const form = document.getElementById('purchaseForm');
            const nameInput = document.getElementById('customerName');
            const phoneInput = document.getElementById('customerPhone');
            let isValid = true;

            // Reset previous validation states
            form.classList.remove('was-validated');
            nameInput.classList.remove('is-invalid');
            phoneInput.classList.remove('is-invalid');

            // Validate name
            if (nameInput.value.trim().length < 2) {
                nameInput.classList.add('is-invalid');
                isValid = false;
            }

            // Validate phone
            const phonePattern = /^[0-9]{10,15}$/;
            if (!phonePattern.test(phoneInput.value.replace(/\D/g, ''))) {
                phoneInput.classList.add('is-invalid');
                isValid = false;
            }

            return isValid;
        }

        // Real-time validation feedback with enhanced messages
        document.getElementById('customerName').addEventListener('input', function() {
            const value = this.value.trim();
            const feedback = this.parentNode.querySelector('.invalid-feedback');

            if (value.length > 0 && value.length < 2) {
                this.classList.add('is-invalid');
                this.classList.remove('is-valid');
                if (feedback) feedback.textContent = 'Nama minimal 2 karakter';
            } else if (value.length >= 2) {
                this.classList.remove('is-invalid');
                this.classList.add('is-valid');
                if (feedback) feedback.textContent = '';
            } else {
                this.classList.remove('is-invalid', 'is-valid');
                if (feedback) feedback.textContent = 'Nama lengkap harus diisi (minimal 2 karakter).';
            }
        });

        document.getElementById('customerName').addEventListener('blur', function() {
            const value = this.value.trim();
            if (value.length > 0 && value.length < 2) {
                this.classList.add('is-invalid');
            }
        });

        document.getElementById('customerPhone').addEventListener('input', function() {
            const cleanPhone = this.value.replace(/\D/g, '');
            const feedback = this.parentNode.querySelector('.invalid-feedback');

            if (cleanPhone.length > 0) {
                if (cleanPhone.length < 10) {
                    this.classList.add('is-invalid');
                    this.classList.remove('is-valid');
                    if (feedback) feedback.textContent = 'Nomor WhatsApp minimal 10 digit';
                } else if (cleanPhone.length > 15) {
                    this.classList.add('is-invalid');
                    this.classList.remove('is-valid');
                    if (feedback) feedback.textContent = 'Nomor WhatsApp maksimal 15 digit';
                } else if (!cleanPhone.startsWith('62')) {
                    this.classList.add('is-invalid');
                    this.classList.remove('is-valid');
                    if (feedback) feedback.textContent = 'Nomor WhatsApp harus dimulai dengan 62';
                } else {
                    this.classList.remove('is-invalid');
                    this.classList.add('is-valid');
                    if (feedback) feedback.textContent = '';
                }
            } else {
                this.classList.remove('is-invalid', 'is-valid');
                if (feedback) feedback.textContent = 'Masukkan nomor WhatsApp yang valid (10-15 digit).';
            }
        });

        document.getElementById('customerPhone').addEventListener('blur', function() {
            const cleanPhone = this.value.replace(/\D/g, '');
            if (cleanPhone.length > 0 && (cleanPhone.length < 10 || cleanPhone.length > 15 || !cleanPhone.startsWith('62'))) {
                this.classList.add('is-invalid');
            }
        });

        // Update form submission with validation
        document.getElementById('purchaseForm').addEventListener('submit', async function(e) {
            e.preventDefault();

            // Validate form before submission
            if (!validateForm()) {
                return;
            }

            const submitBtn = document.getElementById('submitBtn');
            const spinner = submitBtn.querySelector('.spinner-border');

            // Show loading
            spinner.classList.remove('d-none');
            submitBtn.disabled = true;

            try {
                const formData = new FormData(this);

                const response = await fetch('/voucher/purchase', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        packageId: formData.get('packageId'),
                        customerName: formData.get('customerName'),
                        customerPhone: formData.get('customerPhone'),
                        quantity: formData.get('quantity'),
                        gateway: formData.get('selectedGateway'),
                        method: formData.get('selectedMethod')
                    })
                });

                const result = await response.json();

                if (result.success) {
                    // Simpan data pembelian ke localStorage untuk tracking
                    const purchaseData = {
                        packageId: formData.get('packageId'),
                        packageName: selectedPackage.name,
                        customerName: formData.get('customerName'),
                        customerPhone: formData.get('customerPhone'),
                        quantity: formData.get('quantity'),
                        purchaseId: result.data.purchaseId,
                        timestamp: new Date().toISOString(),
                        status: 'Menunggu Pembayaran'
                    };
                    localStorage.setItem('lastVoucherPurchase', JSON.stringify(purchaseData));

                    // Open payment gateway in new window (same as invoice monthly)
                    window.open(result.data.paymentUrl, '_blank');
                } else {
                    throw new Error(result.message || 'Gagal memproses pembelian');
                }

            } catch (error) {
                console.error('Purchase error:', error);
                let errorMessage = 'Terjadi kesalahan: ' + error.message;

                if (error.message.includes('Voucher tidak ditemukan')) {
                    errorMessage = 'Voucher tidak dapat ditemukan. Silakan coba pembelian baru atau hubungi admin.';
                }

                alert(errorMessage);
            } finally {
                // Hide loading
                spinner.classList.add('d-none');
                submitBtn.disabled = false;
            }
        });

        // Auto-hide alerts after 5 seconds
        setTimeout(() => {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>
</body>
</html>