<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - <%= process.env.APP_NAME || 'Billing System' %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        .card-header {
            background: linear-gradient(135deg, #007bff, #0056b3);
            color: white;
        }
        .status-online {
            color: #28a745;
            font-weight: bold;
        }
        .status-offline {
            color: #dc3545;
            font-weight: bold;
        }
        .device-card {
            transition: transform 0.2s;
        }
        .device-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .loading-spinner {
            display: none;
        }
        .loading .loading-spinner {
            display: inline-block;
        }
        .loading .btn-text {
            display: none;
        }
        .log-container {
            background: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 0.375rem;
            height: 300px;
            overflow-y: auto;
            padding: 1rem;
            font-family: 'Courier New', monospace;
            font-size: 0.875rem;
        }
        .log-entry {
            margin-bottom: 0.5rem;
            padding: 0.25rem 0.5rem;
            border-radius: 0.25rem;
        }
        .log-success {
            background: #d1edff;
            color: #0c5460;
        }
        .log-error {
            background: #f8d7da;
            color: #721c24;
        }
        .log-info {
            background: #fff3cd;
            color: #856404;
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
        <div class="container-fluid">
            <a class="navbar-brand" href="/admin">
                <i class="fas fa-cogs"></i> Admin Panel
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav me-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/admin">Dashboard</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/admin/genieacs">GenieACS Devices</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="/admin/dns-management">DNS Management</a>
                    </li>
                </ul>
                <ul class="navbar-nav">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
                            <i class="fas fa-user"></i> <%= user ? user.username : 'Admin' %>
                        </a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="/admin/settings"><i class="fas fa-cog"></i> Settings</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a></li>
                        </ul>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <div class="container-fluid mt-4">
        <!-- Header -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h4 class="mb-0">
                            <i class="fas fa-network-wired"></i> GenieACS DNS Management
                        </h4>
                        <small>Konfigurasi DNS Server untuk ONUs melalui GenieACS</small>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <p><strong>GenieACS URL:</strong> <code><%= genieacsUrl %></code></p>
                                <p><strong>Username:</strong> <code><%= genieacsUsername %></code></p>
                            </div>
                            <div class="col-md-6">
                                <button type="button" class="btn btn-outline-primary" onclick="testConnection()">
                                    <i class="fas fa-plug loading-spinner spinner-border spinner-border-sm" role="status"></i>
                                    <span class="btn-text"><i class="fas fa-plug"></i> Test Koneksi</span>
                                </button>
                                <div id="connectionStatus" class="mt-2"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <!-- Control Panel -->
            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-sliders-h"></i> Control Panel</h5>
                    </div>
                    <div class="card-body">
                        <!-- DNS Server Configuration -->
                        <div class="mb-3">
                            <label for="dnsServer" class="form-label">DNS Server IP:</label>
                            <input type="text" class="form-control" id="dnsServer" value="192.168.8.89" placeholder="192.168.8.89">
                            <small class="form-text text-muted">IP server GenieACS yang akan dijadikan DNS</small>
                        </div>

                        <!-- Single Device Configuration -->
                        <div class="mb-3">
                            <label for="deviceId" class="form-label">Device ID (Opsional):</label>
                            <input type="text" class="form-control" id="deviceId" placeholder="C0FD84-F663NV3A-ZTEGCB8BB94C">
                            <small class="form-text text-muted">Kosongkan untuk konfigurasi semua device online</small>
                        </div>

                        <!-- Action Buttons -->
                        <div class="d-grid gap-2">
                            <button type="button" class="btn btn-success" onclick="configureDNS()">
                                <i class="fas fa-cog loading-spinner spinner-border spinner-border-sm" role="status"></i>
                                <span class="btn-text"><i class="fas fa-cog"></i> Konfigurasi DNS</span>
                            </button>
                            <button type="button" class="btn btn-info" onclick="loadOnlineDevices()">
                                <i class="fas fa-sync loading-spinner spinner-border spinner-border-sm" role="status"></i>
                                <span class="btn-text"><i class="fas fa-sync"></i> Refresh Device</span>
                            </button>
                            <button type="button" class="btn btn-warning" onclick="configureAllOnline()">
                                <i class="fas fa-broadcast-tower loading-spinner spinner-border spinner-border-sm" role="status"></i>
                                <span class="btn-text"><i class="fas fa-broadcast-tower"></i> Konfigurasi Semua Online</span>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Statistics -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-chart-bar"></i> Statistik</h5>
                    </div>
                    <div class="card-body">
                        <div class="row text-center">
                            <div class="col-12 mb-2">
                                <h3 id="totalDevices" class="text-primary">-</h3>
                                <small>Total Device</small>
                            </div>
                            <div class="col-6">
                                <h4 id="onlineDevices" class="text-success">-</h4>
                                <small>Online</small>
                            </div>
                            <div class="col-6">
                                <h4 id="offlineDevices" class="text-danger">-</h4>
                                <small>Offline</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Device List -->
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="fas fa-list"></i> Device Online (Last 24 hours)</h5>
                    </div>
                    <div class="card-body">
                        <div id="deviceList" class="row">
                            <div class="col-12 text-center">
                                <p class="text-muted">Klik "Refresh Device" untuk memuat daftar device</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Log Container -->
        <div class="row mt-4">
            <div class="col-12">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0"><i class="fas fa-terminal"></i> Activity Log</h5>
                        <button type="button" class="btn btn-sm btn-outline-secondary" onclick="clearLog()">
                            <i class="fas fa-trash"></i> Clear
                        </button>
                    </div>
                    <div class="card-body p-0">
                        <div id="logContainer" class="log-container"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Global variables
        let onlineDevices = [];

        // Utility functions
        function addLog(message, type = 'info') {
            const logContainer = document.getElementById('logContainer');
            const timestamp = new Date().toLocaleTimeString('id-ID');
            const logEntry = document.createElement('div');
            logEntry.className = `log-entry log-${type}`;
            logEntry.innerHTML = `[${timestamp}] ${message}`;
            logContainer.appendChild(logEntry);
            logContainer.scrollTop = logContainer.scrollHeight;
        }

        function clearLog() {
            document.getElementById('logContainer').innerHTML = '';
        }

        function setButtonLoading(buttonElement, loading = true) {
            if (loading) {
                buttonElement.classList.add('loading');
                buttonElement.disabled = true;
            } else {
                buttonElement.classList.remove('loading');
                buttonElement.disabled = false;
            }
        }

        function showAlert(message, type = 'info') {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            document.querySelector('.container-fluid').insertBefore(alertDiv, document.querySelector('.container-fluid').firstChild);
            
            // Auto dismiss after 5 seconds
            setTimeout(() => {
                if (alertDiv && alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 5000);
        }

        // Test connection
        async function testConnection() {
            const button = event.target.closest('button');
            setButtonLoading(button, true);
            addLog('Testing koneksi ke GenieACS...', 'info');

            try {
                const response = await fetch('/admin/dns-management/api/test-connection', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();
                const statusElement = document.getElementById('connectionStatus');

                if (result.success) {
                    statusElement.innerHTML = `<span class="text-success"><i class="fas fa-check-circle"></i> Koneksi berhasil! (${result.data.deviceCount} device ditemukan)</span>`;
                    addLog(`Koneksi berhasil! Ditemukan ${result.data.deviceCount} device`, 'success');
                } else {
                    statusElement.innerHTML = `<span class="text-danger"><i class="fas fa-times-circle"></i> Koneksi gagal: ${result.message}</span>`;
                    addLog(`Koneksi gagal: ${result.message}`, 'error');
                }
            } catch (error) {
                console.error('Error testing connection:', error);
                document.getElementById('connectionStatus').innerHTML = `<span class="text-danger"><i class="fas fa-times-circle"></i> Error: ${error.message}</span>`;
                addLog(`Error testing connection: ${error.message}`, 'error');
            } finally {
                setButtonLoading(button, false);
            }
        }

        // Load online devices
        async function loadOnlineDevices() {
            const button = event.target.closest('button');
            setButtonLoading(button, true);
            addLog('Memuat daftar device online...', 'info');

            try {
                const response = await fetch('/admin/dns-management/api/devices-online');
                const result = await response.json();

                if (result.success) {
                    onlineDevices = result.devices;
                    displayDevices(result.devices);
                    updateStatistics(result);
                    addLog(`Berhasil memuat ${result.devices.length} device online`, 'success');
                } else {
                    addLog(`Gagal memuat device: ${result.message}`, 'error');
                }
            } catch (error) {
                console.error('Error loading devices:', error);
                addLog(`Error loading devices: ${error.message}`, 'error');
            } finally {
                setButtonLoading(button, false);
            }
        }

        // Display devices
        function displayDevices(devices) {
            const deviceList = document.getElementById('deviceList');
            
            if (devices.length === 0) {
                deviceList.innerHTML = '<div class="col-12 text-center"><p class="text-muted">Tidak ada device online</p></div>';
                return;
            }

            let html = '';
            devices.forEach(device => {
                html += `
                    <div class="col-md-6 mb-3">
                        <div class="card device-card h-100">
                            <div class="card-body">
                                <h6 class="card-title text-truncate" title="${device.id}">${device.id}</h6>
                                <p class="card-text mb-1"><small><strong>Serial:</strong> ${device.serialNumber || 'N/A'}</small></p>
                                <p class="card-text mb-1"><small><strong>Model:</strong> ${device.model || 'N/A'}</small></p>
                                <p class="card-text mb-1"><small><strong>PPPoE:</strong> ${device.pppoeUsername || 'N/A'}</small></p>
                                <p class="card-text mb-1"><small><strong>Tag:</strong> ${device.tag || 'N/A'}</small></p>
                                <p class="card-text mb-2"><small><strong>Last Inform:</strong> ${device.hoursAgo}h ago</small></p>
                                <button class="btn btn-sm btn-primary" onclick="configureDeviceDNS('${device.id}')">
                                    <i class="fas fa-cog"></i> Configure DNS
                                </button>
                            </div>
                        </div>
                    </div>
                `;
            });
            deviceList.innerHTML = html;
        }

        // Update statistics
        function updateStatistics(result) {
            document.getElementById('totalDevices').textContent = result.totalDevices;
            document.getElementById('onlineDevices').textContent = result.onlineDevices;
            document.getElementById('offlineDevices').textContent = result.totalDevices - result.onlineDevices;
        }

        // Configure DNS for specific device
        async function configureDeviceDNS(deviceId) {
            const dnsServer = document.getElementById('dnsServer').value || '192.168.8.89';
            addLog(`Mengkonfigurasi DNS untuk device ${deviceId}...`, 'info');

            try {
                const response = await fetch('/admin/dns-management/api/configure-device', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        deviceId: deviceId,
                        dnsServer: dnsServer
                    })
                });

                const result = await response.json();

                if (result.success) {
                    addLog(`DNS berhasil dikonfigurasi untuk ${deviceId}`, 'success');
                    showAlert(`DNS berhasil dikonfigurasi untuk device ${deviceId}`, 'success');
                } else {
                    addLog(`Gagal konfigurasi DNS untuk ${deviceId}: ${result.message}`, 'error');
                    showAlert(`Gagal konfigurasi DNS: ${result.message}`, 'danger');
                }
            } catch (error) {
                console.error('Error configuring DNS:', error);
                addLog(`Error configuring DNS untuk ${deviceId}: ${error.message}`, 'error');
                showAlert(`Error: ${error.message}`, 'danger');
            }
        }

        // Configure DNS (single device or all)
        async function configureDNS() {
            const button = event.target.closest('button');
            const deviceId = document.getElementById('deviceId').value.trim();
            const dnsServer = document.getElementById('dnsServer').value || '192.168.8.89';

            if (deviceId) {
                // Configure single device
                await configureDeviceDNS(deviceId);
            } else {
                // Show confirmation for all devices
                if (onlineDevices.length === 0) {
                    showAlert('Tidak ada device online. Silakan refresh device list terlebih dahulu.', 'warning');
                    return;
                }

                if (!confirm(`Anda yakin ingin mengkonfigurasi DNS untuk ${onlineDevices.length} device online?`)) {
                    return;
                }

                await configureAllOnline();
            }
        }

        // Configure all online devices
        async function configureAllOnline() {
            const button = event.target.closest('button');
            setButtonLoading(button, true);
            addLog('Memulai konfigurasi DNS untuk semua device online...', 'info');

            try {
                const response = await fetch('/admin/dns-management/api/configure-all-online', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                const result = await response.json();

                if (result.success) {
                    addLog('Konfigurasi DNS dimulai untuk semua device online (background process)', 'success');
                    showAlert('Konfigurasi DNS untuk semua device online telah dimulai. Proses berjalan di background.', 'success');
                } else {
                    addLog(`Gagal memulai konfigurasi DNS: ${result.message}`, 'error');
                    showAlert(`Gagal memulai konfigurasi: ${result.message}`, 'danger');
                }
            } catch (error) {
                console.error('Error configuring all devices:', error);
                addLog(`Error configuring all devices: ${error.message}`, 'error');
                showAlert(`Error: ${error.message}`, 'danger');
            } finally {
                setButtonLoading(button, false);
            }
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            addLog('GenieACS DNS Management siap digunakan', 'success');
        });
    </script>
</body>
</html>
