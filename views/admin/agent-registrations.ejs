<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Pendaftaran Agent - Admin Panel</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <!-- Admin Mobile Optimizations -->
    <link href="/css/admin-mobile.css" rel="stylesheet">
    <style>
        body {
            background: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .navbar {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .card {
            border: none;
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            transition: all 0.3s ease;
        }
        .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }
        .status-pending {
            background: linear-gradient(135deg, #ffc107, #ff8c00);
            color: white;
        }
        .status-approved {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
        }
        .status-rejected {
            background: linear-gradient(135deg, #dc3545, #e74c3c);
            color: white;
        }
        .agent-card {
            border-left: 4px solid #667eea;
            transition: all 0.3s ease;
        }
        .agent-card:hover {
            border-left-color: #28a745;
            transform: translateX(5px);
        }
        .btn-action {
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        .btn-approve {
            background: linear-gradient(135deg, #28a745, #20c997);
            border: none;
            color: white;
        }
        .btn-approve:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(40, 167, 69, 0.3);
        }
        .btn-reject {
            background: linear-gradient(135deg, #dc3545, #e74c3c);
            border: none;
            color: white;
        }
        .btn-reject:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(220, 53, 69, 0.3);
        }
        .stats-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark">
        <div class="container-fluid">
            <a class="navbar-brand" href="/admin/dashboard">
                <i class="fas fa-user-tie me-2"></i>
                Admin Panel
            </a>
            <div class="navbar-nav ms-auto">
                <a class="nav-link" href="/admin/dashboard">
                    <i class="fas fa-home me-1"></i>Dashboard
                </a>
                <a class="nav-link" href="/admin/agents">
                    <i class="fas fa-users me-1"></i>Manage Agents
                </a>
                <a class="nav-link" href="/admin/logout">
                    <i class="fas fa-sign-out-alt me-1"></i>Logout
                </a>
            </div>
        </div>
    </nav>

    <div class="container-fluid mt-4">
        <div class="row">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2>
                        <i class="fas fa-user-plus me-2"></i>
                        Pendaftaran Agent
                    </h2>
                    <div class="btn-group">
                        <button class="btn btn-outline-primary" onclick="refreshData()">
                            <i class="fas fa-sync-alt me-1"></i>Refresh
                        </button>
                    </div>
                </div>

                <!-- Stats Cards -->
                <div class="row mb-4">
                    <div class="col-md-3">
                        <div class="card stats-card">
                            <div class="card-body text-center">
                                <i class="fas fa-clock fa-2x mb-2"></i>
                                <h4 id="pendingCount">0</h4>
                                <p class="mb-0">Menunggu Approval</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card stats-card">
                            <div class="card-body text-center">
                                <i class="fas fa-check-circle fa-2x mb-2"></i>
                                <h4 id="approvedCount">0</h4>
                                <p class="mb-0">Disetujui</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card stats-card">
                            <div class="card-body text-center">
                                <i class="fas fa-times-circle fa-2x mb-2"></i>
                                <h4 id="rejectedCount">0</h4>
                                <p class="mb-0">Ditolak</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="card stats-card">
                            <div class="card-body text-center">
                                <i class="fas fa-users fa-2x mb-2"></i>
                                <h4 id="totalCount">0</h4>
                                <p class="mb-0">Total Pendaftaran</p>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Filter Tabs -->
                <ul class="nav nav-tabs mb-4" id="statusTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="pending-tab" data-bs-toggle="tab" data-bs-target="#pending" type="button" role="tab">
                            <i class="fas fa-clock me-1"></i>Menunggu Approval
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="approved-tab" data-bs-toggle="tab" data-bs-target="#approved" type="button" role="tab">
                            <i class="fas fa-check-circle me-1"></i>Disetujui
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="rejected-tab" data-bs-toggle="tab" data-bs-target="#rejected" type="button" role="tab">
                            <i class="fas fa-times-circle me-1"></i>Ditolak
                        </button>
                    </li>
                </ul>

                <!-- Tab Content -->
                <div class="tab-content" id="statusTabContent">
                    <!-- Pending Registrations -->
                    <div class="tab-pane fade show active" id="pending" role="tabpanel">
                        <div class="row" id="pendingAgents">
                            <!-- Pending agents will be loaded here -->
                        </div>
                    </div>

                    <!-- Approved Registrations -->
                    <div class="tab-pane fade" id="approved" role="tabpanel">
                        <div class="row" id="approvedAgents">
                            <!-- Approved agents will be loaded here -->
                        </div>
                    </div>

                    <!-- Rejected Registrations -->
                    <div class="tab-pane fade" id="rejected" role="tabpanel">
                        <div class="row" id="rejectedAgents">
                            <!-- Rejected agents will be loaded here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Action Modal -->
    <div class="modal fade" id="actionModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="actionModalTitle">Action</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="actionModalBody">
                        <!-- Modal content will be loaded here -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Batal</button>
                    <button type="button" class="btn btn-primary" id="confirmAction">Konfirmasi</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentAgentId = null;
        let currentAction = null;

        // Load data on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadAgentRegistrations();
        });

        // Load agent registrations
        async function loadAgentRegistrations() {
            try {
                const response = await fetch('/admin/api/agent-registrations');
                const data = await response.json();
                
                if (data.success) {
                    displayAgents(data.agents);
                    updateStats(data.stats);
                } else {
                    console.error('Error loading agent registrations:', data.message);
                }
            } catch (error) {
                console.error('Error loading agent registrations:', error);
            }
        }

        // Display agents by status
        function displayAgents(agents) {
            const pendingContainer = document.getElementById('pendingAgents');
            const approvedContainer = document.getElementById('approvedAgents');
            const rejectedContainer = document.getElementById('rejectedAgents');

            // Clear containers
            pendingContainer.innerHTML = '';
            approvedContainer.innerHTML = '';
            rejectedContainer.innerHTML = '';

            agents.forEach(agent => {
                const agentCard = createAgentCard(agent);
                
                if (agent.status === 'pending') {
                    pendingContainer.appendChild(agentCard);
                } else if (agent.status === 'active') {
                    approvedContainer.appendChild(agentCard);
                } else if (agent.status === 'rejected') {
                    rejectedContainer.appendChild(agentCard);
                }
            });
        }

        // Create agent card
        function createAgentCard(agent) {
            const col = document.createElement('div');
            col.className = 'col-md-6 col-lg-4 mb-3';

            const statusClass = agent.status === 'pending' ? 'status-pending' : 
                              agent.status === 'active' ? 'status-approved' : 'status-rejected';
            
            const statusText = agent.status === 'pending' ? 'Menunggu Approval' : 
                             agent.status === 'active' ? 'Disetujui' : 'Ditolak';

            col.innerHTML = `
                <div class="card agent-card">
                    <div class="card-body">
                        <div class="d-flex justify-content-between align-items-start mb-3">
                            <div>
                                <h6 class="card-title mb-1">${agent.name}</h6>
                                <small class="text-muted">@${agent.username}</small>
                            </div>
                            <span class="badge ${statusClass}">${statusText}</span>
                        </div>
                        
                        <div class="mb-3">
                            <p class="mb-1"><i class="fas fa-phone me-2"></i>${agent.phone}</p>
                            ${agent.email ? `<p class="mb-1"><i class="fas fa-envelope me-2"></i>${agent.email}</p>` : ''}
                            <p class="mb-1"><i class="fas fa-map-marker-alt me-2"></i>${agent.address}</p>
                            <p class="mb-0"><i class="fas fa-calendar me-2"></i>${new Date(agent.created_at).toLocaleDateString('id-ID')}</p>
                        </div>

                        ${agent.status === 'pending' ? `
                            <div class="d-grid gap-2">
                                <button class="btn btn-approve btn-action" onclick="showActionModal(${agent.id}, 'approve')">
                                    <i class="fas fa-check me-1"></i>Setujui
                                </button>
                                <button class="btn btn-reject btn-action" onclick="showActionModal(${agent.id}, 'reject')">
                                    <i class="fas fa-times me-1"></i>Tolak
                                </button>
                            </div>
                        ` : ''}
                    </div>
                </div>
            `;

            return col;
        }

        // Update stats
        function updateStats(stats) {
            document.getElementById('pendingCount').textContent = stats.pending || 0;
            document.getElementById('approvedCount').textContent = stats.approved || 0;
            document.getElementById('rejectedCount').textContent = stats.rejected || 0;
            document.getElementById('totalCount').textContent = stats.total || 0;
        }

        // Show action modal
        function showActionModal(agentId, action) {
            currentAgentId = agentId;
            currentAction = action;
            
            const modal = new bootstrap.Modal(document.getElementById('actionModal'));
            const title = document.getElementById('actionModalTitle');
            const body = document.getElementById('actionModalBody');
            const confirmBtn = document.getElementById('confirmAction');

            if (action === 'approve') {
                title.textContent = 'Setujui Pendaftaran Agent';
                body.innerHTML = `
                    <div class="alert alert-success">
                        <i class="fas fa-info-circle me-2"></i>
                        <strong>Konfirmasi Persetujuan</strong><br>
                        Agent akan dapat login dan mulai transaksi setelah disetujui.
                    </div>
                    <p>Apakah Anda yakin ingin menyetujui pendaftaran agent ini?</p>
                `;
                confirmBtn.className = 'btn btn-success';
                confirmBtn.innerHTML = '<i class="fas fa-check me-1"></i>Setujui';
            } else {
                title.textContent = 'Tolak Pendaftaran Agent';
                body.innerHTML = `
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Konfirmasi Penolakan</strong><br>
                        Agent tidak akan dapat login dan harus mendaftar ulang.
                    </div>
                    <div class="mb-3">
                        <label for="rejectReason" class="form-label">Alasan Penolakan (Opsional)</label>
                        <textarea class="form-control" id="rejectReason" rows="3" placeholder="Masukkan alasan penolakan..."></textarea>
                    </div>
                `;
                confirmBtn.className = 'btn btn-danger';
                confirmBtn.innerHTML = '<i class="fas fa-times me-1"></i>Tolak';
            }

            modal.show();
        }

        // Confirm action
        document.getElementById('confirmAction').addEventListener('click', async function() {
            if (currentAction === 'approve') {
                await approveAgent(currentAgentId);
            } else if (currentAction === 'reject') {
                const reason = document.getElementById('rejectReason').value;
                await rejectAgent(currentAgentId, reason);
            }
        });

        // Approve agent
        async function approveAgent(agentId) {
            try {
                const response = await fetch(`/admin/api/agent-registrations/${agentId}/approve`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });
                
                const data = await response.json();
                
                if (data.success) {
                    alert('Agent berhasil disetujui!');
                    bootstrap.Modal.getInstance(document.getElementById('actionModal')).hide();
                    loadAgentRegistrations();
                } else {
                    alert('Error: ' + data.message);
                }
            } catch (error) {
                console.error('Error approving agent:', error);
                alert('Terjadi kesalahan saat menyetujui agent');
            }
        }

        // Reject agent
        async function rejectAgent(agentId, reason) {
            try {
                const response = await fetch(`/admin/api/agent-registrations/${agentId}/reject`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ reason })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    alert('Agent berhasil ditolak!');
                    bootstrap.Modal.getInstance(document.getElementById('actionModal')).hide();
                    loadAgentRegistrations();
                } else {
                    alert('Error: ' + data.message);
                }
            } catch (error) {
                console.error('Error rejecting agent:', error);
                alert('Terjadi kesalahan saat menolak agent');
            }
        }

        // Refresh data
        function refreshData() {
            loadAgentRegistrations();
        }
    </script>
</body>
</html>
