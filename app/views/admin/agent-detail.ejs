<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detail Agent - <%= agent.name %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <!-- Admin Mobile Optimizations -->
    <link href="/css/admin-mobile.css" rel="stylesheet">
    <style>
        .stats-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
        }
        
        .stats-card h3 {
            font-size: 2.5rem;
            font-weight: bold;
            margin-bottom: 5px;
        }
        
        .stats-card p {
            margin: 0;
            opacity: 0.9;
        }
        
        .info-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            margin-bottom: 20px;
            box-shadow: 0 4px 20px rgba(0,0,0,0.08);
            border: 1px solid #e9ecef;
        }
        
        .info-card h5 {
            color: #495057;
            margin-bottom: 15px;
            font-weight: 600;
        }
        
        .info-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #f8f9fa;
        }
        
        .info-item:last-child {
            border-bottom: none;
        }
        
        .info-label {
            font-weight: 500;
            color: #6c757d;
        }
        
        .info-value {
            font-weight: 600;
            color: #495057;
        }
        
        .status-badge {
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: 500;
            font-size: 0.9rem;
        }
        
        .status-active {
            background: #d4edda;
            color: #155724;
        }
        
        .status-inactive {
            background: #f8d7da;
            color: #721c24;
        }
        
        .status-suspended {
            background: #fff3cd;
            color: #856404;
        }
        
        .transaction-item {
            background: white;
            border-radius: 10px;
            padding: 15px;
            margin-bottom: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            border-left: 4px solid #007bff;
        }
        
        .transaction-item.voucher {
            border-left-color: #28a745;
        }
        
        .transaction-item.payment {
            border-left-color: #17a2b8;
        }
        
        .transaction-item.balance {
            border-left-color: #ffc107;
        }
        
        .loading {
            text-align: center;
            padding: 40px;
            color: #6c757d;
        }
        
        .back-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            color: white;
            padding: 10px 20px;
            border-radius: 25px;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
        }
        
        .back-btn:hover {
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.4);
        }
        
        .page-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px 0;
            margin-bottom: 30px;
        }
        
        .page-header h1 {
            margin: 0;
            font-size: 2.5rem;
            font-weight: bold;
        }
        
        .page-header p {
            margin: 10px 0 0 0;
            opacity: 0.9;
        }
    </style>
</head>
<body>
    <!-- Page Header -->
    <div class="page-header">
        <div class="container">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1><i class="fas fa-user-circle me-3"></i>Detail Agent</h1>
                    <p>Informasi lengkap dan statistik performa agent</p>
                </div>
                <div class="col-md-4 text-md-end">
                    <a href="/admin/agents" class="back-btn">
                        <i class="fas fa-arrow-left"></i>
                        Kembali ke Daftar Agent
                    </a>
                </div>
            </div>
        </div>
    </div>

    <div class="container">
        <!-- Alert Container -->
        <div id="alertContainer"></div>

        <!-- Agent Info Card -->
        <div class="info-card">
            <div class="row">
                <div class="col-md-8">
                    <h5><i class="fas fa-user me-2"></i>Informasi Agent</h5>
                    <div class="info-item">
                        <span class="info-label">Nama Lengkap:</span>
                        <span class="info-value"><%= agent.name %></span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Username:</span>
                        <span class="info-value">@<%= agent.username %></span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Nomor HP:</span>
                        <span class="info-value"><%= agent.phone %></span>
                    </div>
                    <% if (agent.email) { %>
                    <div class="info-item">
                        <span class="info-label">Email:</span>
                        <span class="info-value"><%= agent.email %></span>
                    </div>
                    <% } %>
                    <% if (agent.address) { %>
                    <div class="info-item">
                        <span class="info-label">Alamat:</span>
                        <span class="info-value"><%= agent.address %></span>
                    </div>
                    <% } %>
                    <div class="info-item">
                        <span class="info-label">Bergabung:</span>
                        <span class="info-value"><%= new Date(agent.created_at).toLocaleDateString('id-ID') %></span>
                    </div>
                </div>
                <div class="col-md-4 text-center">
                    <div class="mb-3">
                        <span class="status-badge status-<%= agent.status %>">
                            <%= agent.status === 'active' ? 'Aktif' : agent.status === 'inactive' ? 'Tidak Aktif' : 'Suspended' %>
                        </span>
                    </div>
                    <div class="mb-3">
                        <h4 class="text-primary">Rp <%= (agent.balance || 0).toLocaleString('id-ID') %></h4>
                        <small class="text-muted">Saldo Saat Ini</small>
                    </div>
                    <div class="btn-group">
                        <button class="btn btn-outline-primary btn-sm" onclick="editAgent(<%= agent.id %>)">
                            <i class="fas fa-edit me-1"></i>Edit
                        </button>
                        <button class="btn btn-outline-<%= agent.status === 'active' ? 'warning' : 'success' %> btn-sm" onclick="toggleAgentStatus(<%= agent.id %>, '<%= agent.status %>')">
                            <i class="fas fa-<%= agent.status === 'active' ? 'pause' : 'play' %> me-1"></i>
                            <%= agent.status === 'active' ? 'Suspend' : 'Aktifkan' %>
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Statistics Cards -->
        <div class="row" id="statisticsContainer">
            <div class="col-md-3">
                <div class="stats-card">
                    <h3 id="totalVoucherSales">-</h3>
                    <p>Total Penjualan Voucher</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card">
                    <h3 id="totalVoucherRevenue">-</h3>
                    <p>Total Revenue Voucher</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card">
                    <h3 id="totalCommission">-</h3>
                    <p>Total Komisi</p>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card">
                    <h3 id="totalPayments">-</h3>
                    <p>Total Pembayaran</p>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="row">
            <div class="col-md-6">
                <div class="info-card">
                    <h5><i class="fas fa-chart-line me-2"></i>Aktivitas Terbaru (30 Hari)</h5>
                    <div class="info-item">
                        <span class="info-label">Penjualan Voucher:</span>
                        <span class="info-value" id="recentVoucherSales">-</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Pembayaran Customer:</span>
                        <span class="info-value" id="recentPayments">-</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Permintaan Saldo:</span>
                        <span class="info-value" id="totalBalanceRequests">-</span>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="info-card">
                    <h5><i class="fas fa-wallet me-2"></i>Informasi Saldo</h5>
                    <div class="info-item">
                        <span class="info-label">Saldo Saat Ini:</span>
                        <span class="info-value">Rp <span id="currentBalance">-</span></span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Total Deposit Disetujui:</span>
                        <span class="info-value">Rp <span id="totalApprovedRequests">-</span></span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Total Pembayaran Customer:</span>
                        <span class="info-value">Rp <span id="totalPaymentAmount">-</span></span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Transaction History -->
        <div class="info-card">
            <div class="d-flex justify-content-between align-items-center mb-3">
                <h5><i class="fas fa-history me-2"></i>Riwayat Transaksi</h5>
                <div class="btn-group">
                    <button class="btn btn-outline-primary btn-sm" onclick="loadTransactions('all')">
                        <i class="fas fa-list me-1"></i>Semua
                    </button>
                    <button class="btn btn-outline-success btn-sm" onclick="loadTransactions('voucher')">
                        <i class="fas fa-ticket-alt me-1"></i>Voucher
                    </button>
                    <button class="btn btn-outline-info btn-sm" onclick="loadTransactions('payment')">
                        <i class="fas fa-credit-card me-1"></i>Pembayaran
                    </button>
                    <button class="btn btn-outline-warning btn-sm" onclick="loadTransactions('balance')">
                        <i class="fas fa-wallet me-1"></i>Saldo
                    </button>
                </div>
            </div>
            <div id="transactionsContainer">
                <div class="loading">
                    <i class="fas fa-spinner fa-spin me-2"></i>Memuat riwayat transaksi...
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        const agentId = <%= agent.id %>;
        let currentFilter = 'all';

        // Load agent statistics
        async function loadStatistics() {
            try {
                const response = await fetch(`/admin/agents/${agentId}/details`);
                const data = await response.json();
                
                if (data.success) {
                    const stats = data.statistics;
                    
                    // Update statistics cards
                    document.getElementById('totalVoucherSales').textContent = stats.total_voucher_sales || 0;
                    document.getElementById('totalVoucherRevenue').textContent = 'Rp ' + (stats.total_voucher_revenue || 0).toLocaleString('id-ID');
                    document.getElementById('totalCommission').textContent = 'Rp ' + (stats.total_commission_earned || 0).toLocaleString('id-ID');
                    document.getElementById('totalPayments').textContent = stats.total_monthly_payments || 0;
                    
                    // Update recent activity
                    document.getElementById('recentVoucherSales').textContent = stats.recent_voucher_sales || 0;
                    document.getElementById('recentPayments').textContent = stats.recent_payments || 0;
                    document.getElementById('totalBalanceRequests').textContent = stats.total_balance_requests || 0;
                    
                    // Update balance info
                    document.getElementById('currentBalance').textContent = (stats.current_balance || 0).toLocaleString('id-ID');
                    document.getElementById('totalApprovedRequests').textContent = (stats.total_approved_requests || 0).toLocaleString('id-ID');
                    document.getElementById('totalPaymentAmount').textContent = (stats.total_payment_amount || 0).toLocaleString('id-ID');
                } else {
                    showAlert('Gagal memuat statistik agent: ' + data.message, 'danger');
                }
            } catch (error) {
                console.error('Error loading statistics:', error);
                showAlert('Gagal memuat statistik agent: ' + error.message, 'danger');
            }
        }

        // Load transaction history
        async function loadTransactions(filter = 'all') {
            currentFilter = filter;
            const container = document.getElementById('transactionsContainer');
            container.innerHTML = '<div class="loading"><i class="fas fa-spinner fa-spin me-2"></i>Memuat riwayat transaksi...</div>';
            
            try {
                const response = await fetch(`/admin/agents/${agentId}/transactions?filter=${filter}&limit=10`);
                const data = await response.json();
                
                if (data.success) {
                    displayTransactions(data.transactions);
                } else {
                    container.innerHTML = '<div class="text-center text-muted">Gagal memuat riwayat transaksi</div>';
                }
            } catch (error) {
                console.error('Error loading transactions:', error);
                container.innerHTML = '<div class="text-center text-muted">Error memuat riwayat transaksi</div>';
            }
        }

        // Display transactions
        function displayTransactions(transactions) {
            const container = document.getElementById('transactionsContainer');
            
            if (!transactions || transactions.length === 0) {
                container.innerHTML = '<div class="text-center text-muted">Tidak ada transaksi</div>';
                return;
            }
            
            let html = '';
            transactions.forEach(transaction => {
                const typeClass = getTransactionTypeClass(transaction.transaction_type);
                const typeIcon = getTransactionTypeIcon(transaction.transaction_type);
                const typeLabel = getTransactionTypeLabel(transaction.transaction_type);
                
                html += `
                    <div class="transaction-item ${typeClass}">
                        <div class="row align-items-center">
                            <div class="col-md-1">
                                <i class="${typeIcon} fa-2x text-${typeClass}"></i>
                            </div>
                            <div class="col-md-6">
                                <h6 class="mb-1">${typeLabel}</h6>
                                <small class="text-muted">${transaction.description || '-'}</small>
                            </div>
                            <div class="col-md-2 text-center">
                                <span class="badge bg-${getStatusColor(transaction.status)}">
                                    ${getStatusLabel(transaction.status)}
                                </span>
                            </div>
                            <div class="col-md-2 text-end">
                                <strong class="text-${transaction.amount >= 0 ? 'success' : 'danger'}">
                                    ${transaction.amount >= 0 ? '+' : ''}Rp ${Math.abs(transaction.amount).toLocaleString('id-ID')}
                                </strong>
                            </div>
                            <div class="col-md-1 text-end">
                                <small class="text-muted">
                                    ${new Date(transaction.created_at).toLocaleDateString('id-ID')}
                                </small>
                            </div>
                        </div>
                    </div>
                `;
            });
            
            container.innerHTML = html;
        }

        // Helper functions
        function getTransactionTypeClass(type) {
            if (type.includes('voucher')) return 'voucher';
            if (type.includes('payment')) return 'payment';
            if (type.includes('balance')) return 'balance';
            return '';
        }

        function getTransactionTypeIcon(type) {
            if (type.includes('voucher')) return 'fas fa-ticket-alt';
            if (type.includes('payment')) return 'fas fa-credit-card';
            if (type.includes('balance')) return 'fas fa-wallet';
            return 'fas fa-exchange-alt';
        }

        function getTransactionTypeLabel(type) {
            const labels = {
                'voucher_sale': 'Penjualan Voucher',
                'monthly_payment': 'Pembayaran Customer',
                'deposit': 'Deposit Saldo',
                'withdrawal': 'Penarikan Saldo',
                'commission': 'Komisi',
                'balance_request': 'Permintaan Saldo'
            };
            return labels[type] || type;
        }

        function getStatusColor(status) {
            const colors = {
                'completed': 'success',
                'pending': 'warning',
                'failed': 'danger',
                'cancelled': 'secondary',
                'approved': 'success',
                'rejected': 'danger'
            };
            return colors[status] || 'secondary';
        }

        function getStatusLabel(status) {
            const labels = {
                'completed': 'Selesai',
                'pending': 'Menunggu',
                'failed': 'Gagal',
                'cancelled': 'Dibatalkan',
                'approved': 'Disetujui',
                'rejected': 'Ditolak'
            };
            return labels[status] || status;
        }

        // Show alert
        function showAlert(message, type) {
            const alertContainer = document.getElementById('alertContainer');
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            alertContainer.appendChild(alertDiv);
            
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 5000);
        }

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            loadStatistics();
            loadTransactions('all');
        });
    </script>
</body>
</html>
